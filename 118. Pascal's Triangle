118. Pascal's Triangle
link:- https://leetcode.com/problems/pascals-triangle/description/
code:- import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;

class Solution {
    static BigInteger factorial(int numRows) {
        if (numRows == 0) {
            return BigInteger.ONE;
        }
        BigInteger fact = BigInteger.ONE;
        for (int i = 1; i <= numRows; i++) {
            fact = fact.multiply(BigInteger.valueOf(i));
        }
        return fact;
    }

    static BigInteger ncr(int numRows, int r) {
        return factorial(numRows).divide(factorial(r).multiply(factorial(numRows - r)));
    }

    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> triangle = new ArrayList<>();

        for (int i = 0; i < numRows; i++) {
            List<Integer> row = new ArrayList<>();
            row.add(1);
            for (int j = 1; j < i; j++) {
                row.add(ncr(i, j).intValue());
            }
            if (i > 0) {
                row.add(1);
            }
            triangle.add(row);
        }

        return triangle;
    }
}
